{"ast":null,"code":"import _objectWithoutProperties from \"/home/daniel/Desktop/my_projects/Express/VotingPoll/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { addError, removeError } from './error';\nimport { SET_CURRENT_USER } from '../actionTypes';\nimport API from '../../services/api';\nexport const setCurrentUser = user => ({\n  type: SET_CURRENT_USER,\n  user\n});\nexport const setToken = token => {\n  API.setToken(token);\n};\nexport const logout = () => dispatch => {\n  localStorage.clear();\n  API.setToken(null);\n  dispatch(setCurrentUser({}));\n  dispatch(removeError());\n};\nexport const authUser = (path, data) => async dispatch => {\n  try {\n    const _ref = await API.call('post', \"/\".concat(path), data),\n          token = _ref.token,\n          user = _objectWithoutProperties(_ref, [\"token\"]);\n\n    localStorage.setItem('jwtToken', token);\n    API.setToken(token);\n    dispatch(setCurrentUser(user));\n    dispatch(removeError());\n  } catch (err) {\n    const error = err.response.data.error;\n  }\n};","map":{"version":3,"sources":["/home/daniel/Desktop/my_projects/Express/VotingPoll/client/src/store/actions/auth.js"],"names":["addError","removeError","SET_CURRENT_USER","API","setCurrentUser","user","type","setToken","token","logout","dispatch","localStorage","clear","authUser","path","data","call","setItem","err","error","response"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,SAApC;AACA,SAAQC,gBAAR,QAA+B,gBAA/B;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAGA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAK;AACrCC,EAAAA,IAAI,EAAEJ,gBAD+B;AAErCG,EAAAA;AAFqC,CAAL,CAA3B;AAKP,OAAO,MAAME,QAAQ,GAAGC,KAAK,IAAI;AAC/BL,EAAAA,GAAG,CAACI,QAAJ,CAAaC,KAAb;AACD,CAFM;AAIP,OAAO,MAAMC,MAAM,GAAG,MAAMC,QAAQ,IAAI;AACtCC,EAAAA,YAAY,CAACC,KAAb;AACAT,EAAAA,GAAG,CAACI,QAAJ,CAAa,IAAb;AACAG,EAAAA,QAAQ,CAACN,cAAc,CAAC,EAAD,CAAf,CAAR;AACAM,EAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AAED,CANM;AAQP,OAAO,MAAMY,QAAQ,GAAI,CAACC,IAAD,EAAOC,IAAP,KAAgB,MAAML,QAAN,IAAkB;AACzD,MAAI;AAAA,iBACyB,MAAMP,GAAG,CAACa,IAAJ,CAAS,MAAT,aAAqBF,IAArB,GAA6BC,IAA7B,CAD/B;AAAA,UACMP,KADN,QACMA,KADN;AAAA,UACgBH,IADhB;;AAEFM,IAAAA,YAAY,CAACM,OAAb,CAAqB,UAArB,EAAiCT,KAAjC;AACAL,IAAAA,GAAG,CAACI,QAAJ,CAAaC,KAAb;AACAE,IAAAA,QAAQ,CAACN,cAAc,CAACC,IAAD,CAAf,CAAR;AACAK,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACD,GAND,CAME,OAAOiB,GAAP,EAAY;AAAA,UACJC,KADI,GACMD,GAAG,CAACE,QAAJ,CAAaL,IADnB,CACJI,KADI;AAEb;AACF,CAVM","sourcesContent":["import {addError, removeError} from './error'\nimport {SET_CURRENT_USER} from '../actionTypes'\n\nimport API from '../../services/api';\n\n\nexport const setCurrentUser = user => ({\n  type: SET_CURRENT_USER,\n  user\n});\n\nexport const setToken = token => {\n  API.setToken(token);\n};\n\nexport const logout = () => dispatch => {\n  localStorage.clear()\n  API.setToken(null);\n  dispatch(setCurrentUser({}));\n  dispatch(removeError());\n\n}\n\nexport const authUser =  (path, data) => async dispatch => {\n  try {\n    const { token, ...user } = await API.call('post', `/${path}`, data);\n    localStorage.setItem('jwtToken', token)\n    API.setToken(token);\n    dispatch(setCurrentUser(user));\n    dispatch(removeError());\n  } catch (err) {\n    const { error } = err.response.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}