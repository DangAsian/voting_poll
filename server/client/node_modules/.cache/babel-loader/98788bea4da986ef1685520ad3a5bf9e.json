{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/my_projects/Express/VotingPoll/server/client/src/components/layouts/Alert.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nconst Alert = ({\n  alerts\n}) => {\n  let descriptionAlert;\n\n  if (alerts !== null && alerts.length > 0) {\n    alerts.map(alert => console.log(alert));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, descriptionAlert);\n}; // alerts !== null &&\n// alerts.length > 0 &&\n// alerts.map(alert => (\n//   <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n//     {alert.msg}\n//   </div>\n// ));\n\n\nAlert.propTypes = {\n  name: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","map":{"version":3,"sources":["/home/daniel/Desktop/my_projects/Express/VotingPoll/server/client/src/components/layouts/Alert.js"],"names":["React","PropTypes","connect","Alert","alerts","descriptionAlert","length","map","alert","console","log","propTypes","name","string","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC5B,MAAIC,gBAAJ;;AAEA,MAAID,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,MAAP,GAAgB,CAAvC,EAA0C;AACxCF,IAAAA,MAAM,CAACG,GAAP,CAAWC,KAAK,IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADF;AAGD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,gBADH,CADF;AAKD,CAdD,C,CAeE;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEFF,KAAK,CAACQ,SAAN,GAAkB;AAChBC,EAAAA,IAAI,EAAEX,SAAS,CAACY;AADA,CAAlB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,MAAM,EAAEW,KAAK,CAACP;AADkB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\n\nconst Alert = ({ alerts }) => {\n  let descriptionAlert;\n\n  if (alerts !== null && alerts.length > 0) {\n    alerts.map(alert => (\n      console.log(alert)\n    ))\n  }\n\n  return(\n    <div>\n      {descriptionAlert}\n    </div>\n  )\n}\n  // alerts !== null &&\n  // alerts.length > 0 &&\n  // alerts.map(alert => (\n  //   <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n  //     {alert.msg}\n  //   </div>\n  // ));\n\nAlert.propTypes = {\n  name: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n"]},"metadata":{},"sourceType":"module"}