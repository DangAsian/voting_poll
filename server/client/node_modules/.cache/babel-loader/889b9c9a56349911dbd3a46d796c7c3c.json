{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/my_projects/Express/VotingPoll/server/client/src/components/layouts/Alert.js\";\nimport React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst Alert = props => props.alerts !== null && props.alerts.length > 0 && props.alerts.map(alert => React.createElement(\"div\", {\n  key: alert.id,\n  className: \"alert alert-\".concat(alert.alertType),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, alert.msg));\n\nAlert.propTypes = {\n  name: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","map":{"version":3,"sources":["/home/daniel/Desktop/my_projects/Express/VotingPoll/server/client/src/components/layouts/Alert.js"],"names":["React","Proptypes","connect","Alert","props","alerts","length","map","alert","id","alertType","msg","propTypes","name","PropTypes","string","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IACZA,KAAK,CAACC,MAAN,KAAiB,IAAjB,IACAD,KAAK,CAACC,MAAN,CAAaC,MAAb,GAAsB,CADtB,IAEAF,KAAK,CAACC,MAAN,CAAaE,GAAb,CAAiBC,KAAK,IACpB;AAAK,EAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,EAAA,SAAS,wBAAiBD,KAAK,CAACE,SAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,KAAK,CAACG,GADT,CADF,CAHF;;AASAR,KAAK,CAACS,SAAN,GAAkB;AAChBC,EAAAA,IAAI,EAAEC,SAAS,CAACC;AADA,CAAlB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,MAAM,EAAEY,KAAK,CAACT;AADkB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACc,eAAD,CAAP,CAAyBb,KAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst Alert = ( props ) =>\n  props.alerts !== null &&\n  props.alerts.length > 0 &&\n  props.alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  name: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n"]},"metadata":{},"sourceType":"module"}